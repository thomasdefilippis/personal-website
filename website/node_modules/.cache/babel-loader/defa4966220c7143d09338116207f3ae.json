{"ast":null,"code":"import ECG from './ECG-Sequence.jpg';\nimport ekg from './ekg.gif';\nimport binarySwap from './binarySwap.png';\nimport binarySwapGif from './binarySwap.gif';\nimport scrabble from './scrabble.jpg';\nimport WildTile from './WildTile.gif';\nimport WiggledStrings from './WiggledStrings.jpg';\nexport default [{\n  title: 'The EKG Sequence',\n  imageUrl: ECG,\n  description: \"Given an integer n implement a function that returns its EKG Sequence Index.\",\n  edabit: 'https://edabit.com/challenge/9DjLa5TbT7X73hj5n',\n  gifUrl: ekg,\n  sourceLink: 'https://github.com/thomasdefilippis/Edabit-Code/blob/master/EKG-Sequence/EKG.js'\n}, {\n  title: 'Converting One Binary String to Another',\n  imageUrl: binarySwap,\n  description: 'Write a function that returns the minimum number of swaps to convert the first binary string into the second.',\n  edabit: 'https://edabit.com/challenge/HZcpmfBg6NstB5soN',\n  gifUrl: binarySwapGif,\n  sourceLink: 'https://github.com/thomasdefilippis/Edabit-Code/blob/master/ConvertBinary/convert.js'\n}, {\n  title: 'Wild Tiles',\n  imageUrl: scrabble,\n  description: \"Write a function that returns true if it is possible to build a string with a particular scrabble hand. Hashtags '#' represent wild tiles.\",\n  edabit: 'https://edabit.com/challenge/2vmA8faDorenTwLf3',\n  gifUrl: WildTile,\n  sourceLink: \"https://github.com/thomasdefilippis/Edabit-Code/blob/master/WildTiles/WildTiles.js\"\n}, {\n  title: 'Wild Tiles',\n  imageUrl: WiggledStrings,\n  description: \"Create a function that returns an array of the given string but offset by spaces. Here are some more precise instructions: Keep adding spaces on the left until you have the same number of spaces as the word length. Then keep removing spaces until you reach the original word.\",\n  edabit: 'https://edabit.com/challenge/jNanQ3zKkCdA9ANJw',\n  gifUrl: WildTile,\n  sourceLink: \"https://github.com/thomasdefilippis/Edabit-Code/blob/master/WildTiles/WildTiles.js\"\n}];","map":{"version":3,"sources":["C:/Users/thoma/Files/repositories/website/src/components/mainPage/CodingChallengeData.js"],"names":["ECG","ekg","binarySwap","binarySwapGif","scrabble","WildTile","WiggledStrings","title","imageUrl","description","edabit","gifUrl","sourceLink"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEE,eAAgB,CACd;AACIC,EAAAA,KAAK,EAAE,kBADX;AAEIC,EAAAA,QAAQ,EAAER,GAFd;AAGIS,EAAAA,WAAW,EAAE,8EAHjB;AAIIC,EAAAA,MAAM,EAAE,gDAJZ;AAKIC,EAAAA,MAAM,EAAEV,GALZ;AAMIW,EAAAA,UAAU,EAAE;AANhB,CADc,EAUd;AACIL,EAAAA,KAAK,EAAE,yCADX;AAEIC,EAAAA,QAAQ,EAAEN,UAFd;AAGIO,EAAAA,WAAW,EAAE,+GAHjB;AAIIC,EAAAA,MAAM,EAAE,gDAJZ;AAKIC,EAAAA,MAAM,EAAER,aALZ;AAMIS,EAAAA,UAAU,EAAE;AANhB,CAVc,EAmBd;AACIL,EAAAA,KAAK,EAAE,YADX;AAEIC,EAAAA,QAAQ,EAAEJ,QAFd;AAGIK,EAAAA,WAAW,EAAE,4IAHjB;AAIIC,EAAAA,MAAM,EAAE,gDAJZ;AAKIC,EAAAA,MAAM,EAAEN,QALZ;AAMIO,EAAAA,UAAU,EAAE;AANhB,CAnBc,EA4Bd;AACIL,EAAAA,KAAK,EAAE,YADX;AAEIC,EAAAA,QAAQ,EAAEF,cAFd;AAGIG,EAAAA,WAAW,EAAE,qRAHjB;AAIIC,EAAAA,MAAM,EAAE,gDAJZ;AAKIC,EAAAA,MAAM,EAAEN,QALZ;AAMIO,EAAAA,UAAU,EAAE;AANhB,CA5Bc,CAAhB","sourcesContent":["import ECG from './ECG-Sequence.jpg';\r\nimport ekg from './ekg.gif';\r\nimport binarySwap from './binarySwap.png';\r\nimport binarySwapGif from './binarySwap.gif';\r\nimport scrabble from './scrabble.jpg';\r\nimport WildTile from './WildTile.gif';\r\nimport WiggledStrings from './WiggledStrings.jpg';\r\n\r\n  export default  [\r\n    {\r\n        title: 'The EKG Sequence',\r\n        imageUrl: ECG,\r\n        description: \"Given an integer n implement a function that returns its EKG Sequence Index.\",  \r\n        edabit: 'https://edabit.com/challenge/9DjLa5TbT7X73hj5n',\r\n        gifUrl: ekg,\r\n        sourceLink: 'https://github.com/thomasdefilippis/Edabit-Code/blob/master/EKG-Sequence/EKG.js'\r\n    },\r\n\r\n    {\r\n        title: 'Converting One Binary String to Another',\r\n        imageUrl: binarySwap,\r\n        description: 'Write a function that returns the minimum number of swaps to convert the first binary string into the second.',\r\n        edabit: 'https://edabit.com/challenge/HZcpmfBg6NstB5soN',\r\n        gifUrl: binarySwapGif,\r\n        sourceLink: 'https://github.com/thomasdefilippis/Edabit-Code/blob/master/ConvertBinary/convert.js'\r\n    },\r\n\r\n    {\r\n        title: 'Wild Tiles',\r\n        imageUrl: scrabble,\r\n        description: \"Write a function that returns true if it is possible to build a string with a particular scrabble hand. Hashtags '#' represent wild tiles.\",\r\n        edabit: 'https://edabit.com/challenge/2vmA8faDorenTwLf3',\r\n        gifUrl: WildTile,\r\n        sourceLink: \"https://github.com/thomasdefilippis/Edabit-Code/blob/master/WildTiles/WildTiles.js\"\r\n    },\r\n\r\n    {\r\n        title: 'Wild Tiles',\r\n        imageUrl: WiggledStrings,\r\n        description: \"Create a function that returns an array of the given string but offset by spaces. Here are some more precise instructions: Keep adding spaces on the left until you have the same number of spaces as the word length. Then keep removing spaces until you reach the original word.\",\r\n        edabit: 'https://edabit.com/challenge/jNanQ3zKkCdA9ANJw',\r\n        gifUrl: WildTile,\r\n        sourceLink: \"https://github.com/thomasdefilippis/Edabit-Code/blob/master/WildTiles/WildTiles.js\"\r\n    },\r\n]"]},"metadata":{},"sourceType":"module"}