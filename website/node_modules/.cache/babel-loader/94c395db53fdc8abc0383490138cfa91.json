{"ast":null,"code":"import React from'react';import{makeStyles,Grid,Button}from'@material-ui/core';import CodingChallengeData from'./CodingChallengeData';import ProjectCard from'./ProjectCard';import ArrowUpwardIcon from'@material-ui/icons/ArrowUpward';import{Link}from'react-scroll';var useStyles=makeStyles(function(theme){return{root:{backgroundColor:'black',width:'100%',height:'auto',textAlign:'center',marginBottom:'200px',marginTop:'100px'},header:{color:'rgb(228, 130, 74)',fontFamily:'roboto',fontSize:'40px'},arrowStyles:{position:'relative',fontSize:'100px',color:\"rgb(228, 130, 74)\"},title:{width:'100%',height:'auto',borderBottom:'solid 3px rgb(228, 130, 74)',borderTop:'solid 3px rgb(228, 130, 74)',marginTop:'70px'},codingChallenges:{marginTop:'100px'},projectContainer:{textAlign:'left'},buttonContainerStyles:{width:'150px',height:'300px',margin:'0 auto',textAlign:'center',marginBottom:'250px'},buttonStyles:{fontSize:'20px',height:'125px',width:'125px',border:'solid 2px rgb(228, 130, 74)',borderRadius:'50%',backgroundColor:'black',color:'rgb(228, 130, 74)',textTransform:'none',marginBottom:'0px','&:hover':{border:'solid 4px rgb(228, 130, 74)'}}};});var CodingChallenges=function CodingChallenges(){var classes=useStyles();var getProjectCard=function getProjectCard(projectObj){var title=projectObj.title,imageUrl=projectObj.imageUrl,description=projectObj.description,gifUrl=projectObj.gifUrl,sourceLink=projectObj.sourceLink;return/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:4,className:classes.projectContainer,key:title},/*#__PURE__*/React.createElement(ProjectCard,{projectObj:projectObj}));};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(ArrowUpwardIcon,{className:classes.arrowStyles,id:\"codingChallenges\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Link,{activeClass:\"active\",to:\"projects\",spy:true,smooth:true,offset:-70,duration:500},/*#__PURE__*/React.createElement(Button,{className:classes.buttonStyles},\"Up\")),/*#__PURE__*/React.createElement(\"header\",{className:classes.title},/*#__PURE__*/React.createElement(\"h1\",{className:classes.header},\"Coding Challenges\")),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",className:classes.codingChallenges},/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.example,xs:false,sm:1,md:1,lg:2,xl:2}),/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.example,xs:12,sm:10,md:10,lg:8,xl:8},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",spacing:4},CodingChallengeData.map(function(projectObj){return getProjectCard(projectObj);}))),/*#__PURE__*/React.createElement(Grid,{item:true,className:classes.example,xs:false,sm:1,md:1,lg:2,xl:2}))));};export default CodingChallenges;","map":{"version":3,"sources":["C:/Users/thoma/files/repositories/website/src/components/mainPage/CodingChallenges.js"],"names":["React","makeStyles","Grid","Button","CodingChallengeData","ProjectCard","ArrowUpwardIcon","Link","useStyles","theme","root","backgroundColor","width","height","textAlign","marginBottom","marginTop","header","color","fontFamily","fontSize","arrowStyles","position","title","borderBottom","borderTop","codingChallenges","projectContainer","buttonContainerStyles","margin","buttonStyles","border","borderRadius","textTransform","CodingChallenges","classes","getProjectCard","projectObj","imageUrl","description","gifUrl","sourceLink","example","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Grid, Button } from '@material-ui/core';\r\nimport CodingChallengeData from './CodingChallengeData';\r\nimport ProjectCard from './ProjectCard';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { Link } from 'react-scroll';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n        marginBottom: '200px',\r\n        marginTop: '100px'\r\n    },\r\n\r\n    header:{\r\n        color: 'rgb(228, 130, 74)',\r\n        fontFamily: 'roboto',\r\n        fontSize: '40px'\r\n    },\r\n\r\n    arrowStyles:{\r\n        position: 'relative',\r\n        fontSize: '100px',\r\n        color: \"rgb(228, 130, 74)\"\r\n    },\r\n\r\n    title:{\r\n        width: '100%',\r\n        height: 'auto',\r\n        borderBottom: 'solid 3px rgb(228, 130, 74)',\r\n        borderTop: 'solid 3px rgb(228, 130, 74)',\r\n        marginTop: '70px'\r\n    },\r\n\r\n    codingChallenges:{\r\n        marginTop: '100px'\r\n    },\r\n\r\n    projectContainer:{\r\n        textAlign: 'left'\r\n    },\r\n\r\n    buttonContainerStyles: {\r\n\r\n        width: '150px',\r\n        height: '300px',\r\n        margin: '0 auto',\r\n        textAlign: 'center',\r\n        marginBottom: '250px'\r\n    },\r\n\r\n    buttonStyles:{\r\n        fontSize: '20px',\r\n        height: '125px',\r\n        width: '125px',\r\n        border: 'solid 2px rgb(228, 130, 74)',\r\n        borderRadius: '50%',\r\n        backgroundColor: 'black',\r\n        color: 'rgb(228, 130, 74)',\r\n        textTransform: 'none',\r\n        marginBottom: '0px',\r\n        '&:hover': {\r\n            border: 'solid 4px rgb(228, 130, 74)',\r\n        }\r\n    },\r\n\r\n}))\r\n\r\n\r\nconst CodingChallenges = () =>{\r\n    const classes = useStyles();\r\n    const getProjectCard = (projectObj) => {\r\n        const {title, imageUrl, description, gifUrl, sourceLink} = projectObj;\r\n        return(\r\n            <Grid item xs={12} md={4} className={classes.projectContainer} key={title}>\r\n                <ProjectCard projectObj={ projectObj } />\r\n            </Grid>\r\n        )\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <ArrowUpwardIcon className={classes.arrowStyles} \r\n            id=\"codingChallenges\"/>\r\n            <br></br>\r\n            <Link\r\n                        activeClass=\"active\"\r\n                        to=\"projects\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration= {500}\r\n            >\r\n                <Button className={classes.buttonStyles} >Up</Button>\r\n            </Link>\r\n            <header className={classes.title} >\r\n                <h1 className={classes.header}>Coding Challenges</h1>\r\n            </header>\r\n            <section>\r\n                <Grid container direction='row' className={classes.codingChallenges} >\r\n                    <Grid item className={classes.example} xs={false} sm={1} md={1} lg={2} xl={2}>\r\n                    </Grid>\r\n                    <Grid item className={classes.example} xs={12} sm={10} md={10} lg={8} xl={8}>\r\n                        <Grid container direction=\"row\" spacing={4}>\r\n                            {CodingChallengeData.map(projectObj => getProjectCard(projectObj))}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item className={classes.example} xs={false} sm={1} md={1} lg={2} xl={2}>\r\n                    </Grid>\r\n                    </Grid>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodingChallenges;"]},"metadata":{},"sourceType":"module"}