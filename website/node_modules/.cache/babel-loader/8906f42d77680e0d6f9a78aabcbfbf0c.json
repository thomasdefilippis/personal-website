{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Files\\\\repositories\\\\website\\\\src\\\\components\\\\mainPage\\\\CodingChallenges.js\";\nimport React from 'react';\nimport { makeStyles, Grid, Button } from '@material-ui/core';\nimport CodingChallengeData from './CodingChallengeData';\nimport ProjectCard from './ProjectCard';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { Link } from 'react-scroll';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'black',\n    width: '100%',\n    height: 'auto',\n    textAlign: 'center',\n    marginBottom: '200px',\n    marginTop: '100px'\n  },\n  header: {\n    color: 'rgb(228, 130, 74)',\n    fontFamily: 'roboto',\n    fontSize: '40px'\n  },\n  arrowStyles: {\n    position: 'relative',\n    fontSize: '100px',\n    color: \"rgb(228, 130, 74)\"\n  },\n  title: {\n    width: '100%',\n    height: 'auto',\n    borderBottom: 'solid 3px rgb(228, 130, 74)',\n    borderTop: 'solid 3px rgb(228, 130, 74)',\n    marginTop: '70px'\n  },\n  codingChallenges: {\n    marginTop: '100px'\n  },\n  projectContainer: {\n    textAlign: 'left'\n  },\n  buttonContainerStyles: {\n    width: '150px',\n    height: '300px',\n    margin: '0 auto',\n    textAlign: 'center',\n    marginBottom: '250px'\n  },\n  buttonStyles: {\n    fontSize: '20px',\n    height: '125px',\n    width: '125px',\n    border: 'solid 2px rgb(228, 130, 74)',\n    borderRadius: '50%',\n    backgroundColor: 'black',\n    color: 'rgb(228, 130, 74)',\n    textTransform: 'none',\n    marginBottom: '0px',\n    '&:hover': {\n      border: 'solid 4px rgb(228, 130, 74)'\n    }\n  }\n}));\n\nconst CodingChallenges = () => {\n  const classes = useStyles();\n\n  const getProjectCard = projectObj => {\n    const {\n      title,\n      imageUrl,\n      description,\n      gifUrl,\n      sourceLink\n    } = projectObj;\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      className: classes.projectContainer,\n      key: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ProjectCard, {\n      projectObj: projectObj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n    className: classes.arrowStyles,\n    id: \"codingChallenges\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    activeClass: \"active\",\n    to: \"projects\",\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Up\")), /*#__PURE__*/React.createElement(\"header\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Coding Challenges\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.codingChallenges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.example,\n    xs: false,\n    sm: 1,\n    md: 1,\n    lg: 2,\n    xl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.example,\n    xs: 12,\n    sm: 10,\n    md: 10,\n    lg: 8,\n    xl: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, CodingChallengeData.map(projectObj => getProjectCard(projectObj)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.example,\n    xs: false,\n    sm: 1,\n    md: 1,\n    lg: 2,\n    xl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default CodingChallenges;","map":{"version":3,"sources":["C:/Users/thoma/Files/repositories/website/src/components/mainPage/CodingChallenges.js"],"names":["React","makeStyles","Grid","Button","CodingChallengeData","ProjectCard","ArrowUpwardIcon","Link","useStyles","theme","root","backgroundColor","width","height","textAlign","marginBottom","marginTop","header","color","fontFamily","fontSize","arrowStyles","position","title","borderBottom","borderTop","codingChallenges","projectContainer","buttonContainerStyles","margin","buttonStyles","border","borderRadius","textTransform","CodingChallenges","classes","getProjectCard","projectObj","imageUrl","description","gifUrl","sourceLink","example","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Grid, Button } from '@material-ui/core';\r\nimport CodingChallengeData from './CodingChallengeData';\r\nimport ProjectCard from './ProjectCard';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { Link } from 'react-scroll';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root:{\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n        marginBottom: '200px',\r\n        marginTop: '100px'\r\n    },\r\n\r\n    header:{\r\n        color: 'rgb(228, 130, 74)',\r\n        fontFamily: 'roboto',\r\n        fontSize: '40px'\r\n    },\r\n\r\n    arrowStyles:{\r\n        position: 'relative',\r\n        fontSize: '100px',\r\n        color: \"rgb(228, 130, 74)\"\r\n    },\r\n\r\n    title:{\r\n        width: '100%',\r\n        height: 'auto',\r\n        borderBottom: 'solid 3px rgb(228, 130, 74)',\r\n        borderTop: 'solid 3px rgb(228, 130, 74)',\r\n        marginTop: '70px'\r\n    },\r\n\r\n    codingChallenges:{\r\n        marginTop: '100px'\r\n    },\r\n\r\n    projectContainer:{\r\n        textAlign: 'left'\r\n    },\r\n\r\n    buttonContainerStyles: {\r\n\r\n        width: '150px',\r\n        height: '300px',\r\n        margin: '0 auto',\r\n        textAlign: 'center',\r\n        marginBottom: '250px'\r\n    },\r\n\r\n    buttonStyles:{\r\n        fontSize: '20px',\r\n        height: '125px',\r\n        width: '125px',\r\n        border: 'solid 2px rgb(228, 130, 74)',\r\n        borderRadius: '50%',\r\n        backgroundColor: 'black',\r\n        color: 'rgb(228, 130, 74)',\r\n        textTransform: 'none',\r\n        marginBottom: '0px',\r\n        '&:hover': {\r\n            border: 'solid 4px rgb(228, 130, 74)',\r\n        }\r\n    },\r\n\r\n}))\r\n\r\n\r\nconst CodingChallenges = () =>{\r\n    const classes = useStyles();\r\n    const getProjectCard = (projectObj) => {\r\n        const {title, imageUrl, description, gifUrl, sourceLink} = projectObj;\r\n        return(\r\n            <Grid item xs={12} md={4} className={classes.projectContainer} key={title}>\r\n                <ProjectCard projectObj={ projectObj } />\r\n            </Grid>\r\n        )\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <ArrowUpwardIcon className={classes.arrowStyles} \r\n            id=\"codingChallenges\"/>\r\n            <br></br>\r\n            <Link\r\n                        activeClass=\"active\"\r\n                        to=\"projects\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        offset={-70}\r\n                        duration= {500}\r\n            >\r\n                <Button className={classes.buttonStyles} >Up</Button>\r\n            </Link>\r\n            <header className={classes.title} >\r\n                <h1 className={classes.header}>Coding Challenges</h1>\r\n            </header>\r\n            <section>\r\n                <Grid container direction='row' className={classes.codingChallenges} >\r\n                    <Grid item className={classes.example} xs={false} sm={1} md={1} lg={2} xl={2}>\r\n                    </Grid>\r\n                    <Grid item className={classes.example} xs={12} sm={10} md={10} lg={8} xl={8}>\r\n                        <Grid container direction=\"row\" spacing={4}>\r\n                            {CodingChallengeData.map(projectObj => getProjectCard(projectObj))}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item className={classes.example} xs={false} sm={1} md={1} lg={2} xl={2}>\r\n                    </Grid>\r\n                    </Grid>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodingChallenges;"]},"metadata":{},"sourceType":"module"}