{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Files\\\\repositories\\\\website\\\\src\\\\components\\\\mainPage\\\\ProjectCard.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card } from '@material-ui/core';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    backgroundColor: 'black',\n    border: 'solid 3px rgb(228, 130, 74)',\n    height: 'auto',\n    margin: '0 auto',\n    padding: '5px',\n    '&:hover': {\n      borderRadius: '15%',\n      opacity: '0.8'\n    }\n  },\n  typographyStyles: {\n    color: 'rgb(228, 130, 74)'\n  },\n  links: {\n    color: \"#396395\",\n    opacity: '0.9',\n    paddingBottom: '30px',\n    \"&:hover\": {\n      textDecoration: 'underline',\n      opacity: '1.0'\n    }\n  },\n  sourceLink: {\n    textDecoration: 'none'\n  }\n});\nexport default function ProjectCard(props) {\n  const classes = useStyles();\n  const {\n    title,\n    imageUrl,\n    description,\n    gifUrl,\n    sourceLink\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    alt: title,\n    height: \"300\",\n    image: imageUrl,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.typographyStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.typographyStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, description))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    className: classes.links,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: sourceLink,\n    target: \"_blank\",\n    className: classes.sourceLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    className: classes.links,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Source Code\"))));\n}","map":{"version":3,"sources":["C:/Users/thoma/Files/repositories/website/src/components/mainPage/ProjectCard.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","root","maxWidth","backgroundColor","border","height","margin","padding","borderRadius","opacity","typographyStyles","color","links","paddingBottom","textDecoration","sourceLink","ProjectCard","props","classes","title","imageUrl","description","gifUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card } from '@material-ui/core';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    backgroundColor: 'black',\r\n    border: 'solid 3px rgb(228, 130, 74)',\r\n    height: 'auto',\r\n    margin: '0 auto',\r\n    padding: '5px',\r\n    '&:hover': {\r\n        borderRadius: '15%',\r\n        opacity: '0.8'\r\n    }\r\n    \r\n    \r\n  },\r\n\r\n  typographyStyles:{\r\n      color: 'rgb(228, 130, 74)'\r\n  },\r\n\r\n  links:{\r\n      color: \"#396395\",\r\n      opacity: '0.9',\r\n      paddingBottom: '30px',\r\n      \"&:hover\": {\r\n          textDecoration: 'underline',\r\n          opacity: '1.0'\r\n      }\r\n  },\r\n\r\n  sourceLink:{\r\n    textDecoration: 'none'\r\n  }\r\n});\r\n\r\nexport default function ProjectCard(props) {\r\n  const classes = useStyles();\r\n  const {title, imageUrl, description, gifUrl, sourceLink} = props;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n\r\n          component='img'\r\n          alt={title}\r\n          height=\"300\"\r\n          image= {imageUrl}\r\n          title={title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.typographyStyles}>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.typographyStyles}>\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions >\r\n        <Button size=\"small\" color=\"primary\" className={classes.links}>\r\n          Preview\r\n        </Button>\r\n        <a href={sourceLink} target=\"_blank\" className={classes.sourceLink}>\r\n          <Button size=\"small\" color=\"primary\" className={classes.links} >\r\n            Source Code\r\n          </Button>\r\n        </a>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}