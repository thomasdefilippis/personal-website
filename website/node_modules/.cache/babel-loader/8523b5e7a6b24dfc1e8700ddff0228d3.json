{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thoma\\\\Files\\\\repositories\\\\website\\\\src\\\\components\\\\ContactMe\\\\Form.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField } from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport emailjs from 'emailjs-com';\n\nconst useStyles = theme => ({\n  root: {\n    '& label.Mui-focused': {\n      color: 'rgb(228, 130, 74)'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'rgb(228, 130, 74)'\n    },\n    '& .MuiOutlinedInput-root': {\n      '&:hover fieldset': {\n        borderColor: 'rgb(228, 130, 74)'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'rgb(228, 130, 74)'\n      }\n    }\n  },\n  typographyStyles: {\n    marginBottom: '50px'\n  },\n  header: {\n    fontSize: '50px'\n  },\n  description: {\n    backgroundColor: 'black',\n    width: '90%',\n    height: 'auto',\n    marginTop: '90px',\n    paddingLeft: '50px',\n    color: 'rgb(228, 130, 74)',\n    fontFamily: 'roboto',\n    fontSize: '40px'\n  },\n  textField: {\n    backgroundColor: 'white',\n    width: 'auto',\n    marginBottom: '20px'\n  },\n  message: {\n    backgroundColor: 'white',\n    width: '91%'\n  },\n  paragraph: {\n    fontSize: '20px'\n  },\n  emailLink: {\n    textDecoration: 'underline',\n    cursor: 'pointer',\n    color: 'rgb(228, 130, 74)',\n    '&:hover': {\n      opacity: '0.7'\n    }\n  },\n  submit: {\n    marginLeft: '10px',\n    width: '150px',\n    height: '40px',\n    marginTop: '25px',\n    cursor: 'pointer',\n    backgroundColor: 'rgb(228, 130, 74)',\n    fontSize: '30px',\n    fontFamily: 'roboto',\n    fontWeight: 'bold',\n    borderRadius: '10%',\n    border: 'none',\n    opacity: '1',\n    '&:hover': {\n      opaicty: '0.3'\n    }\n  }\n});\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nameChange = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.emailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.messageChange = event => {\n      this.setState({\n        message: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log('hey');\n      const templateId = 'contact';\n\n      if (this.validate(this.state.email)) {\n        if (this.state.name !== '' && this.state.message !== '') {\n          this.sendFeedback(templateId, {\n            message: this.state.message,\n            name: this.state.name,\n            email: this.state.email\n          });\n        } else {\n          Swal.fire({\n            title: 'Invalid entry: you must enter something into each box',\n            icon: 'error',\n            button: {\n              confirm: {\n                text: 'ubah'\n              }\n            }\n          });\n        }\n      } else {\n        Swal.fire({\n          title: 'Invalid email',\n          icon: 'error',\n          confirmButtonColor: 'rgb(228, 130, 74)',\n          confirmButton: {\n            confirmButton: {\n              text: 'ubah'\n            }\n          }\n        });\n      }\n    };\n\n    this.sendFeedback = (templateId, variables) => {\n      emailjs.send('gmail', templateId, variables, 'user_R2I7ggXxSgNXKq2olqxFm').then(res => {\n        // Email successfully sent alert\n        Swal.fire({\n          title: 'Email Successfully Sent',\n          icon: 'success'\n        });\n      }) // Email Failed to send Error alert\n      .catch(err => {\n        Swal.fire({\n          title: 'Email Failed to Send',\n          icon: 'error'\n        });\n        console.error('Email Error:', err);\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    };\n    this.nameChange = this.nameChange.bind(this);\n    this.emailChange = this.emailChange.bind(this);\n    this.messageChange = this.messageChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendFeedback = this.sendFeedback.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  validate(email) {\n    const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\n    return expression.test(String(email).toLowerCase());\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.typographyStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, \"Get in touch\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.paragraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, \"If you want to get in touch, fill out the form below or send an email to \", /*#__PURE__*/React.createElement(\"a\", {\n      className: classes.emailLink,\n      href: \"mailto:thomasdefilippis@gmail.com?subject=Portfolio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 127\n      }\n    }, \"thomasdefilippis@gmail.com\"))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      className: classes.root,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Full Name\",\n      variant: \"outlined\",\n      InputProps: {\n        className: classes.textField\n      },\n      onChange: this.nameChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"e-mail\",\n      variant: \"outlined\",\n      InputProps: {\n        className: classes.textField\n      },\n      required: true,\n      onChange: this.emailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-basic\",\n      label: \"Message\",\n      variant: \"outlined\",\n      multiline: true,\n      rows: 12,\n      className: classes.message,\n      animate: false,\n      onChange: this.messageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      className: classes.submit,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(Form);","map":{"version":3,"sources":["C:/Users/thoma/Files/repositories/website/src/components/ContactMe/Form.js"],"names":["React","withStyles","TextField","Swal","emailjs","useStyles","theme","root","color","borderBottomColor","borderColor","typographyStyles","marginBottom","header","fontSize","description","backgroundColor","width","height","marginTop","paddingLeft","fontFamily","textField","message","paragraph","emailLink","textDecoration","cursor","opacity","submit","marginLeft","fontWeight","borderRadius","border","opaicty","Form","Component","constructor","props","nameChange","event","setState","name","target","value","emailChange","email","messageChange","handleSubmit","preventDefault","console","log","templateId","validate","state","sendFeedback","fire","title","icon","button","confirm","text","confirmButtonColor","confirmButton","variables","send","then","res","catch","err","error","bind","expression","test","String","toLowerCase","render","classes","className"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField } from '@material-ui/core';\r\nimport Swal from 'sweetalert2';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst useStyles = (theme) => ({\r\n    root:{\r\n        '& label.Mui-focused': {\r\n            color: 'rgb(228, 130, 74)',\r\n          },\r\n          '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'rgb(228, 130, 74)',\r\n          },\r\n          '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n              borderColor: 'rgb(228, 130, 74)',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n              borderColor: 'rgb(228, 130, 74)',\r\n            },\r\n          },\r\n    },\r\n\r\n    typographyStyles:{\r\n        marginBottom: '50px'\r\n    },\r\n\r\n    header:{\r\n        fontSize:'50px',\r\n\r\n    },\r\n\r\n    description: {\r\n        backgroundColor: 'black',\r\n        width: '90%',\r\n        height: 'auto',\r\n        marginTop: '90px',\r\n        paddingLeft: '50px',\r\n        color: 'rgb(228, 130, 74)',\r\n        fontFamily: 'roboto',\r\n        fontSize: '40px',\r\n\r\n        \r\n    },\r\n\r\n    textField:{\r\n            backgroundColor: 'white',\r\n            width: 'auto',\r\n            marginBottom: '20px',\r\n    },\r\n\r\n    message:{\r\n        backgroundColor: 'white',\r\n        width: '91%',\r\n    },\r\n\r\n    paragraph:{\r\n        fontSize: '20px',\r\n\r\n    },\r\n\r\n    emailLink:{\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer',\r\n        color: 'rgb(228, 130, 74)',\r\n        '&:hover':{\r\n            opacity: '0.7'\r\n        }\r\n    },\r\n\r\n    submit:{\r\n        marginLeft: '10px',\r\n        width: '150px',\r\n        height: '40px',\r\n        marginTop: '25px',\r\n        cursor: 'pointer',\r\n        backgroundColor: 'rgb(228, 130, 74)',\r\n        fontSize: '30px',\r\n        fontFamily: 'roboto',\r\n        fontWeight: 'bold',\r\n        borderRadius: '10%',\r\n        border: 'none',\r\n        opacity: '1',\r\n        '&:hover': {\r\n            opaicty: '0.3'\r\n        }\r\n    }\r\n});\r\n\r\nclass Form extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state ={\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n      }\r\n      this.nameChange = this.nameChange.bind(this);\r\n      this.emailChange = this.emailChange.bind(this);\r\n      this.messageChange = this.messageChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.sendFeedback = this.sendFeedback.bind(this);\r\n      this.validate = this.validate.bind(this);\r\n\r\n    }\r\n\r\n    nameChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    emailChange = (event) =>{\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    messageChange = (event) =>{\r\n        \r\n        this.setState({\r\n            message: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log('hey')\r\n        const templateId = 'contact';\r\n        if(this.validate(this.state.email)){\r\n            if(this.state.name !== '' && this.state.message !== ''){\r\n                this.sendFeedback(templateId, {\r\n                    message: this.state.message,\r\n                    name: this.state.name,\r\n                    email: this.state.email\r\n                })\r\n            }else{\r\n                Swal.fire({\r\n                    title: 'Invalid entry: you must enter something into each box',\r\n                    icon: 'error',\r\n                    button:{\r\n                        confirm:{text:'ubah'}\r\n                    }\r\n                })\r\n            }\r\n        }else{\r\n            Swal.fire({\r\n                title: 'Invalid email',\r\n                icon: 'error',\r\n                confirmButtonColor: 'rgb(228, 130, 74)',\r\n                confirmButton:{\r\n                    confirmButton:{text:'ubah'}\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n    \r\n    validate(email) {\r\n        const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\r\n    \r\n        return expression.test(String(email).toLowerCase())\r\n    }\r\n\r\n    sendFeedback = (templateId, variables) => {\r\n        emailjs.send(\r\n          'gmail', templateId,\r\n          variables, 'user_R2I7ggXxSgNXKq2olqxFm'\r\n          ).then(res => {\r\n            // Email successfully sent alert\r\n            Swal.fire({\r\n              title: 'Email Successfully Sent',\r\n              icon: 'success'\r\n            })\r\n          })\r\n          // Email Failed to send Error alert\r\n          .catch(err => {\r\n            Swal.fire({\r\n              title: 'Email Failed to Send',\r\n              icon: 'error'\r\n            })\r\n            console.error('Email Error:', err)\r\n          })\r\n    }\r\n\r\n    render(){\r\n    const { classes } = this.props;\r\n    return (\r\n        <div className={classes.description}>\r\n            <div className={classes.typographyStyles}>\r\n                    <h1 className={classes.header}>Get in touch</h1>\r\n                    <p className={classes.paragraph}>If you want to get in touch, fill out the form below or send an email to <a className={classes.emailLink} href=\"mailto:thomasdefilippis@gmail.com?subject=Portfolio\">thomasdefilippis@gmail.com</a></p>\r\n            </div>\r\n            <form noValidate className={classes.root} autoComplete=\"off\">\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"Full Name\" \r\n                    variant=\"outlined\" \r\n                    InputProps={{\r\n                        className: classes.textField\r\n                    }}\r\n                    onChange={this.nameChange}\r\n                    required\r\n                />\r\n                <br></br>\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"e-mail\" \r\n                    variant=\"outlined\" \r\n                    InputProps={{\r\n                        className: classes.textField\r\n                    }}\r\n                    required\r\n                    onChange={this.emailChange}\r\n                />\r\n                <br></br>\r\n                <TextField \r\n                    id=\"outlined-basic\" \r\n                    label=\"Message\" \r\n                    variant=\"outlined\" \r\n                    multiline={true}\r\n                    rows={12} \r\n                    className={classes.message}\r\n                    animate={false}\r\n                    onChange={this.messageChange}\r\n                />\r\n                <br></br>\r\n                <input type=\"submit\" value=\"Send\" className={classes.submit} onClick={this.handleSubmit}/>\r\n            </form>\r\n        </div>\r\n     )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Form);\r\n"]},"metadata":{},"sourceType":"module"}